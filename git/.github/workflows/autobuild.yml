# This is a basic workflow to help you get started with Actions

name: build-git

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - run: |
          sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev
          sudo apt-get install asciidoc xmlto docbook2x
          sudo apt-get install install-info
          wget https://github.com/git/git/archive/refs/tags/v2.42.0.tar.gz -O git.tar.gz
          tar -zxf git.tar.gz
          mv git-* git
          cd git
          make configure
          LDFLAGS=-static ./configure && make all doc info
      - uses: actions/upload-artifact@v3
        with:
          name: git
          path: git/git
          if-no-files-found: error
      - run: |
          (
            echo '- [Build #${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            echo '- [Workflow file](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/.github/workflows/autobuild.yml)'
            echo
            echo '## Files'
            echo '```'
            (cd git && file git)
            echo '```'
            echo
            echo '## SHA256 Checksums'
            echo '```'
            (cd git && sha256sum git)
            echo '```'
          ) | tee release.md
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: run-${{ github.run_number }}
          release_name: "Build #${{ github.run_number }}"
          body_path: release.md
          prerelease: false
          draft: false
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: git/git
          asset_name: git
          asset_content_type: application/octet-stream
